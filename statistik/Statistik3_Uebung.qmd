---
lesson: Statistik 3
knitr:
  opts_chunk: 
    collapse: false
musterloesung: true
---

# Statistik 3: Übung

## Lineare und polynomische Regression

*Aufgabenbeschreibung*

In R gibt es zahlreiche eingebaute Datensätze. Diese sind direkt in R verfügbar und können ohne zusätzliche Downloads oder Installationen genutzt werden. In dieser Übung verwenden wir den Datensatz `LifeCycleSavings`.
Du kannst den Datensatz z.B. mit folgendem Befehl als Objekt laden:

```{r}
DataUebung3 <- LifeCycleSavings
```



Der Datensatz enthält Informationen über die Sparquoten in 50 Ländern:

-   `sr` Sparquote (*Savings Ratio*; Anteil des Einkommens der gespart wird in Prozent)

-   `pop15` Prozentsatz der Bevölkerung unter 15 Jahren

-   `pop75` Prozentsatz der Bevölkerung über 75 Jahren

-   `dpi` Pro-Kopf-Einkommen

Du sollst nun untersuchen, ob und wie Sparquote von den anderen drei Variablen abhängt. Teste für jede erklärende Variable einzeln auf lineare und quadratische Zusammenhänge. Stelle die Ergebnisse grafisch dar und verfasse einen ausformulierten Methoden- und Ergebnisteil.

:::: {.content-hidden unless-meta="musterloesung"}
::: callout-note
## Lösung Übung 3

[Demoscript herunterladen (.R)](../purl/Statistik3_Uebung.R){.dld}

[Demoscript herunterladen (.qmd)](../purl/Statistik3_Uebung.qmd){.dld}

- [Lösungstext als Download](Statistik3_Loesung.pdf)


### R-Session vorbereiten

```{r}
library(ggplot2)
library(patchwork)

```


# Daten anschauen

```{r}
p1 <- ggplot(LifeCycleSavings, aes(x = pop15, y = sr)) +
  geom_point()
p2 <- ggplot(LifeCycleSavings, aes(x = pop75, y = sr)) +
  geom_point()
p3 <- ggplot(LifeCycleSavings, aes(x = dpi, y = sr)) +
  geom_point()

p1+p2+p3

```

-\> Zusammenhänge sind zu erahnen, aber die Streuung ist gross.

### Modelle erstellen

```{r}


lm_pop15 <- lm(sr ~ pop15 , data = LifeCycleSavings ) # Einfaches lineares Modell
lm_q_pop15 <- lm(sr ~ pop15 + I(pop15^2),  data = LifeCycleSavings) # Modell mit quadratischem Term


lm_pop75 <- lm(sr ~ pop75, data = LifeCycleSavings ) # Einfaches lineares Modell
lm_q_pop75 <- lm(sr ~ pop75 + I(pop75^2),  data = LifeCycleSavings) # Modell mit quadratischem Term

lm_dpi <- lm(sr ~ dpi , data = LifeCycleSavings ) # Einfaches lineares Modell
lm_q_dpi <- lm(sr ~ dpi + I(dpi^2),  data = LifeCycleSavings) # Modell mit quadratischem Term


```

### Modell-Outputs anschauen

```{r}
lm_pop15 |> summary()
lm_q_pop15 |> summary()
```

-\> Ein linearer negativer Zusammenhang ist vorhanden.

-\> Kein quadratischer Zusammenhang.

```{r}
lm_pop75 |> summary() 
lm_q_pop75 |> summary() 
```

-\> Ein linearer postiviver Zusammenhang ist vorhanden.

-\> Kein quadratischer Zusammenhang.

```{r}
lm_dpi |> summary()
lm_q_dpi |> summary() 
```

-\> Kein einfacher linearer Zusammenhang.

-\> Ein quadratischer Zusammenhang ist vorhanden.

## Modeldiagnostik

```{r}
# Residualplots
par(mfrow = c(2, 2))
plot(lm_pop15)
plot(lm_q_pop15)
plot(lm_q_dpi)
```


## Darstellung der Ergebnisse

```{r}

# Erstellen der Plots
p1 <- ggplot(LifeCycleSavings, aes(x = pop15, y = sr)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +
  labs(x = "% der Bevölkerung < 15 Jahre",
       y = "Sparquote") +
  theme_classic()

p2 <- ggplot(LifeCycleSavings, aes(x = pop75, y = sr)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +
  labs(x = "% der Bevölkerung > 75 Jahren",
       y = "Sparquote") +
  theme_classic()

p3 <- ggplot(LifeCycleSavings, aes(x = dpi, y = sr)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x + I(x^2), se = FALSE) +
  labs(x = "Pro-Kopf-Einkommen",
       y = "Sparquote") +
  theme_classic()

p1 + p2 + p3

```
:::
::::
