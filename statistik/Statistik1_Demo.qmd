---
lesson: Statistik1
knitr:
  opts_chunk: 
    collapse: false 
---

# Statistik 1: Demo

[Demoscript herunterladen (.R)](../purl/Statistik1_Demo.R){.dld}

[Demoscript herunterladen (.qmd)](../purl/Statistik1_Demo.qmd){.dld}


## t-Test

### Daten generieren und anschauen

```{r}
# Je 10 Messwerte für Sorte a und b zu einem Data Frame im long-Format verbinden 
Messwerte_a <- c(20, 19, 25, 10, 8, 15, 13, 18, 11, 14) # Messwerte von Cultivar a
Messwerte_b <- c(12, 15, 16, 7, 8, 10, 12, 11, 13, 10) # Messwerte von Cultivar b
cultivar <- as.factor( c(rep("a", 10), rep("b", 10))) # Bezeichnug der Cultivare in der Tabelle
blume <- data.frame("cultivar" = cultivar, "size" = c(Messwerte_a, Messwerte_b)) # Data frame erstellen 
```

```{r}
# Boxplots

library(ggplot2)

ggplot(blume, aes(x = cultivar, y = size, fill = cultivar)) +
  geom_boxplot() + # Boxplots
  geom_dotplot(binaxis = "y", stackdir = "center", alpha = 0.5) # Datenpunkte darstellen
```

```{r}
# Histogramme

ggplot(blume, aes(x = size, fill = cultivar)) +
  geom_histogram(binwidth = 2) +
  facet_wrap(~ cultivar)
```

### Zweiseitiger t-Test

```{r}
# Links der Tilde ("~") steht immer die abhängige Variable, rechsts die erklärende(n) Variable(n)
# Alternativ kann man die Werte auch direkt in die t.test()-Funktion eigeben:
# t.test(Messwerte_a, Messwerte_b)

t.test(size ~ cultivar, data = blume) # Zweiseitig "Test auf a ≠ b" (default)
```

### Einseitiger t-Test

```{r}
t.test(size ~ cultivar, alternative = "greater",  data = blume) # Einseitig "Test auf a > b"
t.test(size ~ cultivar, alternative = "less",  data = blume) # Einseitig "Test auf a < b"
```

### Klassischer t-Test vs. Welch Test

```{r}
# Varianzen gleich: klassischer t-Test
t.test(size ~ cultivar, var.equal = TRUE, data = blume)

# Varianzen ungleich: Welch's t-Test (siehe Titelzeile des R-Outputs!)
t.test(size ~ cultivar, data = blume) # dasselbe wie var.equal = FALSE
```

### Gepaarter t-Test

```{r}
# Gepaarter t-Test: erster Wert von a wird mit erstem Wert von
# b gepaart, zweiter Wert von a mit zweitem von b ect.

t.test(Messwerte_a, Messwerte_b, paired = TRUE) # für gepaarten t-Test funktioniert Notation "size ~ cultivar" nicht
```

## Binomialtest

In Klammern übergibt man die Anzahl der Erfolge und die Stichprobengrösse

```{r}
binom.test(84, 200) # Anzahl Frauen im Nationalrat (≙ 42.0 %; Stand 2019)
binom.test(116, 200) # Anzahl Männer im Nationalrat (≙ 58.0 %; Stand 2019)
binom.test(3, 7) # Anzahl Frauen im Bundesrat (≙ 42.9 %; Stand 2019)
```

## Chi-Quadrat-Test & Fishers Test

### Direkter Test in R (dazu Werte als Matrix nötig)

```{r}
# Matrix mit Haarfarbe&Augenfarbe-Kombinationen erstellen
# 38 blond&blau, 14 dunkel&blau, 11 blond&braun, 51 dunkel&braun
count <- matrix(c(38, 14, 11, 51), nrow = 2)
count # Check
rownames(count) <- c("blond", "dunkel") # Benennen für Übersicht
colnames(count) <- c("blau", "braun") #  Benennen für Übersicht
count # Check

# Tests durchführen
chisq.test(count)
fisher.test(count)
```
